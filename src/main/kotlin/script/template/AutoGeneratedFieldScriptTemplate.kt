package script.template

import client.MapleClient
import server.maps.MapleMap
import java.io.File
import java.io.FileWriter
import java.text.SimpleDateFormat
import java.util.*

class AutoGeneratedFieldScriptTemplate(m: MapleMap, c: MapleClient, script: String, firstUser: Boolean) {
    /**
     * This handles both the creation of onUserEnter and onFirstUserEnter scripts,
     * so it's a little more complex than the other templates. With these scripts
     * you can perform actions when users travel to specific fields.
     */

    var field = m
    var client = c
    var name = script
    var path = "./scripts/field/"
    private var scriptType = if (firstUser) "onFirstUserEnter" else "onUserEnter"
    private var modifiedPath = "$path$scriptType"
    var df = SimpleDateFormat("yyyy-MM-dd")
    private var date: String = df.format(Date())

    private val scriptHeader = """/*
    This is an auto-generated field script for Boswell!
    
    Script Name: ${
        if (scriptType == "onFirstUserEnter") field.onFirstUserEnter else field.onUserEnter
    }
    Field Name: ${field.mapName}   
    Field Id: ${field.id}
    Script Type: $scriptType
            
    @Author: Auto Generated
    @Created: $date 
    */
    """

    private val scriptContents =
        "user.message(\"A script file has been generated for this field. However, the field ($scriptType) script does not currently work.\")"

    fun create() {
        val fileName = "$modifiedPath/$name.groovy"
        val newFile = File(fileName)

        if (newFile.createNewFile()) {
            val fw = FileWriter(newFile)
            fw.append(scriptHeader)
            fw.append(scriptContents)
            fw.close()
        }
    }
}